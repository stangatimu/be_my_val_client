{"version":3,"sources":["containers/styles.js","containers/home.js","components/createInvitation.js","containers/queries.js","components/shareInvitation.js","containers/createInvitation.js","components/accepetedInvitation.js","containers/respond.js","containers/index.js","App.js","serviceWorker.js","index.js","assets/golden_ring.svg","assets/bmv_bg.jpg","lib/index.js","assets/couple_kiss.gif","assets/sad_cat.gif"],"names":["colors","useStyles","makeStyles","root","backgroundImage","bmv_bg","minHeight","backgroundSize","overflowX","content","background","borderTopLeftRadius","borderTopRightRadius","minWidth","padding","golden_ring_home","marginBottom","width","height","caption","color","fontSize","fontWeight","welcome_message","marginTop","fontFamily","button","backgroundColor","margin","textDecoration","input","form","maxWidth","alert","borderRadius","lineHeight","error","success","borderColor","invitation_link","fontStyle","recepient_name","Home","classes","Grid","className","justify","container","direction","item","alignItems","src","golden_ring","alt","Typography","align","aria-label","role","Button","variant","size","to","CreateInvitation","onCreate","is_loading","useState","name","alias","sender","details","setDetails","onSubmit","e","preventDefault","TextField","required","type","fullWidth","id","placeholder","value","onChange","target","disabled","CircularProgress","thickness","CREATE_INVITATION","gql","GET_INVITATION_BY_ID","RESPOND_TO_INVITATION","ShareInvitation","url","window","location","origin","style","Link","wordBreak","xs","FacebookShareButton","FacebookIcon","round","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","useMutation","createInvitation","loading","data","Invitation","Create","saveInvitationToLocalStorage","_id","component","recepient","graphQLErrors","length","networkError","variables","AccepetedInvitation","sad","sad_cat","toon_couple_kiss","Respond","match","useQuery","params","invitation","onRespond","res_data","res_loading","res_error","GetByID","onClick","status","position","bottom","RespondToInvitation","client","ApolloClient","uri","process","path","exact","props","InvitationGQL","this","Component","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","global","localStorage","ids","JSON","parse","getItem","getInvitationsFromLocalStorage","setItem","stringify"],"mappings":"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","file":"static/js/main.7d254aae.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/styles';\n\n\n// background image\nimport bmv_bg from \"../assets/bmv_bg.jpg\";\n\nlet colors = {\n    red:\"#bd3625\",\n    text_color:\"#232323\"\n}\n\nconst useStyles = makeStyles({\n    root:{\n        backgroundImage:`url(${bmv_bg})`,\n        minHeight: \"100vh\",\n        backgroundSize: \"contain\",\n        overflowX:\"hidden\"\n    },\n    content:{\n        background:\"#fff\",\n        minHeight:\"15vh\",\n        borderTopLeftRadius: \"60% 30%\",\n        borderTopRightRadius: \"60% 30%\",\n        minWidth:\"120%\",\n        padding:\"0 11%\",\n    },\n    golden_ring_home:{\n        marginBottom:\"-10px\",\n        width:\"100px\",\n        height:\"160px\"\n    },\n    caption:{\n        color:\"white\",\n        fontSize:\"1.3em\",\n        fontWeight:\"bold\"\n    },\n    welcome_message:{\n        fontSize:\"2.1em\",\n        marginTop:\"30px\",\n        fontFamily: \"'Satisfy', cursive\"\n    },\n    button:{\n        backgroundColor:colors.red,\n        margin:\"10px auto\",\n        color:\"white !important\",\n        \"& a\":{\n            color:\"white\",\n            textDecoration:\"none\"\n        }\n    },\n    input:{\n        marginBottom:\"25px\"\n    },\n    form:{\n        width:\"90%\",\n        maxWidth:\"500px\",\n        margin:\"0 auto\"\n    },\n    alert:{\n        borderRadius: \"5px\",\n        lineHeight: \".9em\",\n        width:\"90%\",\n        padding: \"10px\",\n        margin:\"10px auto\"\n    },\n    error:{\n        backgroundColor: \"#cea0a4\",\n        color: \"#721c24 !important\",\n    },\n    success:{\n        color: \"#155724 !important\",\n        backgroundColor: \"#d4edda\",\n        borderColor: \"#c3e6cb\",\n    },\n    invitation_link:{\n        color:colors.red,\n        fontSize:\"1.3em\",\n        fontStyle:\"italic\"\n    },\n    recepient_name:{\n        fontFamily:\"'Satisfy', cursive\",\n        margin:\"20px 0\",\n        fontWeight:\"100\",\n        fontSize:\"1.8em\"\n    }\n});\n\nexport default useStyles;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button,Grid, Typography } from '@material-ui/core';\nimport \"../App.css\";\n\nimport useStyles from './styles';\n\n// golden ring\nimport golden_ring from \"../assets/golden_ring.svg\";\n\nconst Home = () => {\n    const classes = useStyles();\n    return (\n        <Grid className={classes.root} justify=\"center\" container direction=\"row\" >\n            <Grid item container justify=\"center\" direction=\"column\" alignItems=\"center\">\n                <img\n                src={golden_ring} \n                className={`${classes.golden_ring_home} App-logo`} \n                alt=\"spining golden ring\"/>\n                <Typography className={classes.caption} align=\"center\">\n                    GniLeEf sIhTeVoLi<span aria-label=\"love eyes\" role=\"img\">😍</span>\n                </Typography>              \n            </Grid>\n\n            <Grid item className={classes.content} alignItems=\"center\" justify=\"center\" container direction=\"column\">\n                <Typography className={classes.welcome_message} align=\"center\">\n                    Need a date this valentine's? create an invitation below\n                    and make him/her feel special.\n                </Typography>\n                <Button className={classes.button} variant=\"contained\" size=\"big\">\n                    <Link to=\"/invite\">\n                        Create Invitation\n                    </Link>\n                </Button>\n            </Grid>            \n        </Grid>\n    );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Grid,TextField, Typography, Button, CircularProgress } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"../containers/styles\";\n\nconst CreateInvitation = ({onCreate,is_loading}) => {\n    const classes = useStyles();\n    const [ details, setDetails ] = useState({\n        name:\"\",\n        alias:\"\",\n        sender:\"\"\n    });\n\n    const onCreateInvitation = (e)=>{\n        e.preventDefault();\n\n        onCreate({...details,alias:details.alias || \"null\"});\n\n        // submit form\n    }\n    return (\n        <Grid item container>\n            <form className={classes.form} onSubmit={onCreateInvitation}>\n                <Typography className={classes.input} align=\"center\" variant=\"h5\">\n                    Create Invitation\n                </Typography>\n                <TextField\n                  error\n                  required\n                  size=\"small\"\n                  type=\"text\"\n                  fullWidth\n                  id=\"recepient_name\"\n                  placeholder=\"His/Her name\"\n                  variant=\"outlined\"\n                  value={details.name}\n                  className={classes.input}\n                  onChange={(e)=>setDetails({\n                      ...details,\n                      name:e.target.value\n                    })}\n                />\n                <TextField\n                  error\n                  size=\"small\"\n                  fullWidth\n                  type=\"text\"\n                  id=\"alias\"\n                  placeholder=\"nickname (optional)\"\n                  variant=\"outlined\"\n                  className={classes.input}\n                  value={details.alias}\n                  onChange={(e)=>setDetails({\n                    ...details,\n                    alias:e.target.value\n                  })}\n                />\n                <TextField\n                  error\n                  required\n                  size=\"small\"\n                  fullWidth\n                  id=\"sender_name\"\n                  type=\"text\"\n                  placeholder=\"Your name\"\n                  variant=\"outlined\"\n                  className={classes.input}\n                  value={details.sender}\n                  onChange={(e)=>setDetails({\n                    ...details,\n                    sender:e.target.value\n                  })}\n                />\n                {!is_loading && (\n                    <Button disabled={is_loading} fullWidth type=\"submit\" className={classes.button} variant=\"contained\">\n                        Create CreateInvitation\n                    </Button>\n                )}\n                {is_loading && (\n                    <Button fullWidth disabled className={classes.button} variant=\"contained\">\n                        <CircularProgress color=\"secondary\" size={24} thickness={4}/>\n                    </Button>\n                )}\n            </form>\n        </Grid>\n    );\n}\n\nexport default CreateInvitation;\n","import gql from \"graphql-tag\";\n\n\nexport const CREATE_INVITATION = gql`\nmutation($name:String!,$alias:String!,$sender:String!){\n    Invitation{\n      Create(params:{sender:$sender,recepient:{\n        name:$name,\n        alias:$alias\n      }}){\n        _id\n        recepient{\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_INVITATION_BY_ID = gql`\nquery($id:ID!){\n    Invitation{\n      GetByID(_id:$id){\n        _id\n        sender\n        recepient{\n          name\n          alias\n        }\n        status\n      }\n    }\n}\n`;\n\nexport const RESPOND_TO_INVITATION = gql`\nmutation($id:ID!,$status:Boolean!){\n    Invitation{\n      RespondToInvitation(params:{\n        _id:$id,\n        status:$status,\n        comment:\"I accept your request!\"\n      })\n    }\n  }\n`;","import React from 'react';\nimport { Grid, Link,Typography } from '@material-ui/core';\nimport { FacebookShareButton,WhatsappShareButton,TwitterShareButton,RedditShareButton,TelegramShareButton, FacebookIcon, WhatsappIcon, TelegramIcon, TwitterIcon, RedditIcon } from \"react-share\";\nimport useStyles from '../containers/styles';\n\nconst ShareInvitation = ({id}) => {\n    const classes = useStyles();\n    const url = `${window.location.origin}/r/${id}`;\n    return (\n        <Grid style={{marginTop:\"-110px\"}} item container alignItems=\"flex-start\" justify=\"center\">\n            <Typography className={classes.input} align=\"center\" variant=\"h5\">\n                    Share Invitation\n            </Typography>\n            <Typography className={classes.input} variant=\"p\" align=\"center\">\n                <Link  className={classes.invitation_link} style={{wordBreak:\"break-word\"}} to=\"#\">\n                    {url}\n                </Link>\n            </Typography>\n\n            <Typography className={classes.input} align=\"center\" variant=\"p\">\n                or share via;\n            </Typography>\n            <Grid item container justify=\"space-around\" direction=\"row\" xs={12}>\n                <FacebookShareButton url={url}>\n                    <FacebookIcon size={32} round={true}/>\n                </FacebookShareButton>\n                <WhatsappShareButton url={url}>\n                    <WhatsappIcon size={32} round={true}/>\n                </WhatsappShareButton>\n                <TelegramShareButton url={url}>\n                    <TelegramIcon size={32} round={true}/>\n                </TelegramShareButton>\n                <TwitterShareButton url={url}>\n                    <TwitterIcon size={32} round={true}/>\n                </TwitterShareButton>\n                <RedditShareButton url={url}>\n                    <RedditIcon size={32} round={true}/>\n                </RedditShareButton> \n            </Grid>\n        </Grid>\n    );\n}\n\nexport default ShareInvitation;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useMutation } from '@apollo/react-hooks';\nimport \"../App.css\";\n\nimport useStyles from './styles';\nimport { saveInvitationToLocalStorage } from './../lib';\n//assets\nimport golden_ring from \"../assets/golden_ring.svg\";\n\n// components\nimport CreateInvitationForm from \"../components/createInvitation\"; \n\n// queries\nimport { CREATE_INVITATION } from './queries';\nimport ShareInvitation from '../components/shareInvitation';\n    \n\nconst CreateInvitation = () => {\n    const classes = useStyles();\n    const [ createInvitation, {loading,data,error}] = useMutation(CREATE_INVITATION);\n\n    if(data && data.Invitation.Create){\n        saveInvitationToLocalStorage(data.Invitation.Create._id);\n    }\n\n    return (\n        <Grid className={classes.root} justify=\"center\" container direction=\"row\" >\n            <Grid item container justify=\"center\" direction=\"column\" alignItems=\"center\">\n                <img\n                src={golden_ring} \n                className={`${classes.golden_ring_home} App-logo`} \n                alt=\"spining golden ring\"/>\n                <Typography className={classes.caption} align=\"center\">\n                    GniLeEf sIhTeVoLi<span aria-label=\"love eyes\" role=\"img\">😍</span>\n                </Typography>              \n            </Grid>\n\n            <Grid style={{minHeight:\"40vh\"}} item className={classes.content} alignItems=\"center\" justify=\"center\" container direction=\"row\">\n                {data && data.Invitation.Create._id && (\n\t\t\t\t\t<Typography className={`${classes.success} ${classes.alert}`} component=\"p\">\n\t\t\t\t\t\t{`Success! send link below to ${data.Invitation.Create.recepient.name}. Goodluck`}\n                        <span aria-label=\"love eyes\" role=\"img\">😉</span>\n\t\t\t\t\t</Typography>\n\t\t\t\t)}\n\t\t\t\t{/* errors */}\n\t\t\t\t{error && !!error.graphQLErrors.length && (\n\t\t\t\t\t<Typography className={`${classes.error} ${classes.alert}`}  component=\"p\">\n\t\t\t\t\t\t{\"Sorry, something went wrong. Try again later.\"}\n\t\t\t\t\t</Typography>)\n\t\t\t\t}\n\t\t\t\t{/* errors */}\n\t\t\t\t{error && error.networkError && (\n\t\t\t\t\t<Typography className={`${classes.error} ${classes.alert}`}  component=\"p\">\n\t\t\t\t\t\t{\"Sorry, something went wrong. Try again later.\"}\n\t\t\t\t\t</Typography>)\n\t\t\t\t}\n                {!data && <CreateInvitationForm is_loading={loading} onCreate={(data)=>createInvitation({variables:data})}/>}\n                {!!data && !!data.Invitation.Create._id && (\n                    <ShareInvitation id={data.Invitation.Create._id}/>\n                )}\n            </Grid>           \n        </Grid>\n    );\n}\n\nexport default CreateInvitation;\n","import React from 'react';\n\n\nimport toon_couple_kiss from \"../assets/couple_kiss.gif\";\nimport sad_cat from \"../assets/sad_cat.gif\";\nconst AccepetedInvitation = ({sad}) => {\n    if(sad){\n        return <img alt=\"sad_face\" src={sad_cat} style={{width:\"200px\",margin:\"20px auto\",borderRadius:\"50%\"}}/>\n    }\n    return (\n        <img alt=\"toon kiss\" src={toon_couple_kiss} style={{width:\"104%\",margin:\"-10px 0 0 -2%\",borderRadius:'inherit',}}/>\n    );\n}\n\nexport default AccepetedInvitation;\n","import React, { Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Button,Grid, Typography, CircularProgress } from '@material-ui/core';\nimport \"../App.css\";\n\nimport useStyles from './styles';\n\n// golden ring\nimport golden_ring from \"../assets/golden_ring.svg\";\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { GET_INVITATION_BY_ID, RESPOND_TO_INVITATION } from './queries';\nimport AccepetedInvitation from '../components/accepetedInvitation';\n\nconst Respond = ({match}) => {\n    const classes = useStyles();\n    const { data, error, loading } = useQuery(GET_INVITATION_BY_ID,{\n        variables:{id:match.params.invitation}\n    });\n\n    const [ onRespond, { data:res_data,loading:res_loading,error:res_error}] = useMutation(RESPOND_TO_INVITATION);\n\n    return (\n        <Grid className={classes.root} justify=\"center\" container direction=\"row\" >\n            <Grid item container justify=\"center\" direction=\"column\" alignItems=\"center\">\n                <img\n                src={golden_ring} \n                className={`${classes.golden_ring_home} App-logo`} \n                alt=\"spining golden ring\"/>\n                <Typography className={classes.caption} align=\"center\">\n                    GniLeEf sIhTeVoLi<span aria-label=\"love eyes\" role=\"img\">😍</span>\n                </Typography>              \n            </Grid>\n            <Grid item className={classes.content} alignItems=\"center\" justify=\"flex-start\" container direction=\"column\">\n                {loading && !data && (\n                    <CircularProgress color=\"secondary\" size={40} thickness={4}/>\n                )}\n\t\t\t\t{/* errors */}\n\t\t\t\t{error && !!error.graphQLErrors.length && (\n\t\t\t\t\t<Typography className={`${classes.error} ${classes.alert}`}  component=\"p\">\n\t\t\t\t\t\t{\"Sorry, something went wrong. Try again later.\"}\n\t\t\t\t\t</Typography>)\n\t\t\t\t}\n\t\t\t\t{/* errors */}\n\t\t\t\t{error && error.networkError && (\n\t\t\t\t\t<Typography className={`${classes.error} ${classes.alert}`}  component=\"p\">\n\t\t\t\t\t\t{\"Sorry, something went wrong. Try again later.\"}\n\t\t\t\t\t</Typography>)\n\t\t\t\t}\n                {res_error && !!error.graphQLErrors.length && (\n\t\t\t\t\t<Typography className={`${classes.error} ${classes.alert}`}  component=\"p\">\n\t\t\t\t\t\t{\"Sorry, something went wrong. Try again later.\"}\n\t\t\t\t\t</Typography>)\n\t\t\t\t}\n\t\t\t\t{/* errors */}\n\t\t\t\t{res_error && error.networkError && (\n\t\t\t\t\t<Typography className={`${classes.error} ${classes.alert}`}  component=\"p\">\n\t\t\t\t\t\t{\"Sorry, something went wrong. Try again later.\"}\n\t\t\t\t\t</Typography>)\n\t\t\t\t}\n                {!!data && !res_data && data.Invitation.GetByID && (\n                    <Fragment>\n                    <Typography style={{fontSize:\"3.5em\",lineHeight:\".6em\"}} className={classes.welcome_message} align=\"center\">\n                        Will you \n                    </Typography>\n                    <Typography style={{fontSize:\"3.5em\",lineHeight:\".2em\"}} className={classes.welcome_message}  align=\"center\">\n                        be my \n                    </Typography>\n                    <Typography style={{fontSize:\"3.5em\",lineHeight:\".7em\"}} className={classes.welcome_message} align=\"center\">\n                        valentine's? \n                    </Typography>\n                    <Typography align=\"center\" className={`${classes.recepient_name} recepient_name`}>\n                        {data.Invitation.GetByID.recepient.name}&ensp;<span className=\"blinker\">_</span>\n                    </Typography>\n                    {!res_loading && (\n                        <Fragment>\n                            <Button \n                            fullWidth \n                            onClick={()=>{\n                                onRespond({variables:{id:match.params.invitation,status:true}})\n                            }}\n                            className={classes.button} \n                            variant=\"contained\">\n                                YES\n                            </Button>\n                            <Button \n                            fullWidth\n                            onClick={()=>{\n                                onRespond({variables:{id:match.params.invitation,status:false}})\n                            }} \n                            color=\"secondary\" \n                            variant=\"outlined\">\n                                NO\n                            </Button>\n                        </Fragment>\n                    )}\n                    {res_loading && (\n                       <CircularProgress color=\"secondary\" size={24} thickness={4}/> \n                    )}\n                    <Grid item container justify=\"center\">\n                        <Typography style={{position:\"absolute\",fontStyle:\"italic\",bottom:\"60px\"}}>\n                            with love from&ensp;{data.Invitation.GetByID.sender}\n                        </Typography>\n                    </Grid>\n                    </Fragment>\n                 )}\n                 {!!res_data && !!res_data.Invitation.RespondToInvitation && (\n                     <AccepetedInvitation sad={false}/>\n                 )}\n                 {!!res_data && !res_data.Invitation.RespondToInvitation && (\n                     <AccepetedInvitation sad={true}/>\n                 )}\n                 {!!res_data && (\n                     <Button className={classes.button} style={{position:\"absolute\",bottom:\"40px\"}} variant=\"contained\" size=\"big\">\n                        <Link to=\"/invite\">\n                            Create Invitation\n                        </Link>\n                    </Button>\n                 )}\n            </Grid>            \n        </Grid>\n    );\n}\n\nexport default Respond;\n","import React,{ Component, Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport {ApolloProvider} from \"@apollo/react-hooks\";\nimport  ApolloClient from 'apollo-boost';\n\n\n//components\nimport Home from './home';\nimport Create from './createInvitation';\nimport Respond from './respond';\n\nconst client = new ApolloClient({\n\turi: process.env.REACT_APP_API_URL,\n});\n\nconst   Invitation = () => {\n    return (\n        <Fragment>\n            <Route path=\"/\" exact component={()=>(<Home/>)}/>\n            <Route path=\"/invite\" component={()=>(<Create/>)}/>\n            <Route path=\"/r/:invitation\" component={(props)=>(<Respond {...props}/>)}/>\n            <Route path=\"/invitations\" component={()=>(<p>see invitation status</p>)}/>\n        </Fragment>\n    );\n}\n\nclass InvitationGQL extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<Invitation {...this.props}/>\n\t\t\t</ApolloProvider>\n\t\t);\n\t}\n}\n\nexport default InvitationGQL;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\n\n// component\nimport Containers from \"./containers\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n          <Containers/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/golden_ring.7b98e1ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/bmv_bg.af15c23d.jpg\";","export const getInvitationsFromLocalStorage = ()=>{\n    if(global.localStorage){\n        try{\n            let ids = JSON.parse(global.localStorage.getItem(\"invitations\")) || [];\n            return ids;\n        }catch(e){\n            return [];\n        }\n    }\n}\nexport const saveInvitationToLocalStorage = (id)=>{\n    if(global.localStorage){\n        let ids = getInvitationsFromLocalStorage();\n        global.localStorage.setItem(\"invitations\", JSON.stringify([id,...ids]));\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/couple_kiss.49522884.gif\";","module.exports = __webpack_public_path__ + \"static/media/sad_cat.383d1bd5.gif\";"],"sourceRoot":""}